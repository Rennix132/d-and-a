import java.util.Arrays;
import java.util.Random;

public class QuickSort {
    private static final Random rand = new Random();

    public static void sort(int[] a) {
        quicksort(a, 0, a.length - 1);
    }

    private static void quicksort(int[] a, int left, int right) {
        while (left < right) {
            int pivotIndex = partition(a, left, right);
            if (pivotIndex - left < right - pivotIndex) {
                quicksort(a, left, pivotIndex - 1);
                left = pivotIndex + 1;
            } else {
                quicksort(a, pivotIndex + 1, right);
                right = pivotIndex - 1;
            }
        }
    }

    private static int partition(int[] a, int left, int right) {
        int pivotIndex = left + rand.nextInt(right - left + 1);
        int pivot = a[pivotIndex];
        swap(a, pivotIndex, right);
        int i = left;
        for (int j = left; j < right; j++) {
            if (a[j] <= pivot) {
                swap(a, i, j);
                i++;
            }
        }
        swap(a, i, right);
        return i;
    }

    private static void swap(int[] a, int i, int j) {
        int tmp = a[i];
        a[i] = a[j];
        a[j] = tmp;
    }

    public static void main(String[] args) {
        int[] arr = {9, 4, 6, 2, 8, 1, 3, 7, 5};
        System.out.println("Before: " + Arrays.toString(arr));
        sort(arr);
        System.out.println("After:  " + Arrays.toString(arr));
    }
}
